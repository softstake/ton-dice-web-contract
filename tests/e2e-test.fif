// Test #12. End-to-end game test.

"test-env.fif" include

variable locked-grams
0 locked-grams !

"../keys/owner.pk" file>B constant owner_private_key
owner_private_key priv>pub constant owner_public_key

0 =: next-id

dictnew constant init-temp-dict

<b 0 32 u, owner_public_key B, init-queue-dict dict, locked-grams @ Gram, next-id 32 u, b> storage !

variable roll-under
variable amount

{
96 roll-under !
1 Gram* amount !

roll-under @ (.) =: game-params // roll under 96
<b 0 32 u, @' game-params $, b> <s message-to-send !

amount @
<b b{1000100} s, wallet-addr addr, 0 Gram, b{00} s, b>
message-to-send @
recv_internal
contract-code <s
storage @
c7
runvmctx swap abort"Test 12 failed."

storage !

} 10 times

variable stored-slice
variable stored-seqno
variable stored-pubkey
variable stored-queue
variable stored-locked
variable stored-next-id

storage @ <s stored-slice !
stored-slice @ 32 u@+ stored-slice !
stored-seqno !
stored-slice @ 256 u@+ stored-slice !
stored-pubkey !
stored-slice @ dict@+ stored-slice !
stored-queue !
stored-slice @ Gram@+ stored-slice !
stored-locked !
stored-slice @ 32 u@+ stored-slice !
stored-next-id !

variable stored-bet
variable stored-bet-roll-under
variable stored-bet-amount
variable stored-bet-player-addr
variable stored-bet-ref-addr
variable stored-bet-ref-bonus
variable stored-bet-seed

5 stored-queue @ 32 udict@ 1+
abort"Test 12 failed. Reason: bet with specified id not found."
stored-bet !

stored-bet @

<{
8 LDU	//  _2 bet
LDGRAMS	//  _2 _5 bet
LDMSGADDR	//  _2 _5 _7 bet
LDMSGADDR	//  _2 _5 _7 _9 bet
LDGRAMS	//  _2 _5 _7 _9 _11 bet
256 LDU	//  res res res res res res bet
DROP
}>c

<s runvmcode

. stored-bet-seed !

stored-bet-seed @ owner_private_key ed25519_sign_uint constant sig

variable signature

<b 1 32 u, x{22222222} s, 5 32 u, sig B, b> message-to-sign !
message-to-sign @ hashu owner_private_key ed25519_sign_uint signature !
<b signature @ B, message-to-sign @ ref, b> <s message-to-send !

message-to-send @
recv_external
contract-code <s
storage @
c7
runvmctx swap 0 <> abort"Test 14 failed. The returned code is nonzero."