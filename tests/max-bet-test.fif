// Test #9. Maximum bet limit.

"test-env.fif" include

variable seqno
0 seqno !

<b seqno @ 32 u, owner_public_key B, init-queue-dict dict, 0 Gram, b> storage !

variable roll-under
96 roll-under !
variable bet-id
9999 bet-id !

variable fee
2 fee !

{ 100 fee @ - Gram* roll-under @ 1- / } : calc-payout

variable max-bet
100000000000 Gram* 4 calc-payout * 1+ / max-bet ! // available_balance / (4 * payout + 1)

variable amount
max-bet @ amount !

roll-under @ (.) +"," bet-id @ (.) $+ constant game-params
<b 0 32 u, game-params $, b> <s message-to-send !

<b b{1000100} s, wallet-addr addr, 0 Gram, b{00} s, b> constant meta

amount @
meta
message-to-send @
recv_internal
contract-code <s
storage @
c7
runvmctx

variable exit_code

drop
exit_code !
."Exit code " exit_code @ . cr
exit_code @ 0 <> abort"Test #9 Not passed"

// Test #9.1. Possible payout is greater than the maximum.

// variable roll-under
96 roll-under !
variable bet-id
9999 bet-id !

variable fee
2 fee !

variable max-bet
100000000000 Gram* 4 calc-payout * 1+ / max-bet ! // available_balance / (4 * payout + 1)

max-bet @ .s

// variable amount
max-bet @ Gram + amount !

roll-under @ (.) +"," bet-id @ (.) $+ constant game-params
<b 0 32 u, game-params $, b> <s message-to-send !

amount @
meta
message-to-send @
recv_internal
contract-code <s
storage @
c7
runvmctx

variable exit_code

drop
exit_code !
."Exit code " exit_code @ . cr
exit_code @ 44 <> abort"Test #9.1 Not passed"